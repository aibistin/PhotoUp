name    = PhotoUp
author  = Austin Kenny <aibistin.cionnaith@gmail.com>
license = Perl_5
copyright_holder = Austin Kenny
copyright_year   = 2013
; ############################################################################    
;              Git Stuff.    Tutorial says to put it first....
; ############################################################################    
[@Git]
; Included in @Git [Git::Check]
allow_dirty = dist.ini
allow_dirty = README
allow_dirty = Changes             ; ... and Git::Commit
allow_dirty = dist.ini            ; see Git::Check...
untracked_files = warn    ; default value (can also be "warn" or "ignore"))]

changelog   = Changes             ; this is the default
; Included in @Git[Git::Init]
remote = origin git@github.com:USERNAME/%{lc}N.git ; no default
config = user.email aibistin.cionnaith@gmail.com  ; there is no default}]
commit_msg  = v%v%n%n%c           ; see Git::Commit
tag_format  = %v                  ; see Git::Tag
tag_message = %v                  ; see Git::Tag
push_to     = origin              ; see Git::Push]
; also included [Git::NextVersion]
first_version = 0.001       ; this is the default
version_by_branch = 0       ; this is the default
version_regexp  = ^v(.+)$   ; this is the default

; ############################################################################    
;[@Basic]
 [@ConfigSlicer]
 -bundle = @Basic
 -remove = UploadToCpan
 -remove = TestRelease  ; just temporarily :)


[InstallGuide]
[MetaJSON]

;[AutoMetaResources]
 AutoMetaResources.bugtracker.github = user:aibistin
 AutoMetaResources.bugtracker.rt = 0
 AutoMetaResources.repository.github  = user:aibistin
 AutoMetaResources.homepage  = https://github.com/aibistin/%{dist}}

[NextRelease]
[PodWeaver]
[Pod2Html]

; ############################################################################    
;  from DAGOLDEN Plugin
[ReadmeFromPod]     ; from Pod (runs after PodWeaver)
[ReadmeAnyFromPod]  ; create README.pod in repo directory
type = pod
filename = README.pod
location = root
 
 ; t tests
[Test::Compile]     ; make sure .pm files all compile
 fake_home = 1       ; fakes $ENV{HOME} just in case
  
   
[Test::ReportPrereqs] ; show prereqs in automated test output

; ############################################################################    

;[Test::Kwalitee]
;[NoTabsTests]
;[EOLTests]
; Not sure what it does (see Rolsys blog)[Signature]


[AutoPrereqs]
[VersionFromModule]


;[ChangelogFromGit]

[CheckChangeLog]



